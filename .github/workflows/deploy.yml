name: Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: Deploy Angular App to EC2
    runs-on: ubuntu-latest
    environment: main

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Dependencies
        run: npm ci

      - name: Build Angular App
        run: npm run build

      - name: Zip Dist Folder
        run: |
          cd dist/ecommerencefrontend
          zip -r ~/ecommerencefrontend.zip .

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts || true

      - name: Upload to EC2
        run: |
          scp -o StrictHostKeyChecking=no ~/ecommerencefrontend.zip ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:~/ecommerencefrontend.zip

      - name: Deploy via SSH
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} <<-'EOF'
            echo "Connected to EC2 and starting deployment..."

            # Stop and remove old container if exists
            if sudo docker ps -a --format '{{.Names}}' | grep -Eq '^ecommerencefrontend$'; then
              sudo docker stop ecommerencefrontend
              sudo docker rm ecommerencefrontend
            fi

            # Remove old image if exists
            if sudo docker images --format '{{.Repository}}' | grep -Eq '^ecommerencefrontend$'; then
              sudo docker rmi ecommerencefrontend
            fi

            # Clean old folder and unzip latest build
            rm -rf ~/ecommerencefrontend
            mkdir ~/ecommerencefrontend
            unzip -o ~/ecommerencefrontend.zip -d ~/ecommerencefrontend

            # List files to confirm new build is present
            echo "Listing files in ~/ecommerencefrontend after unzip:"
            ls -l ~/ecommerencefrontend

            # Create Dockerfile
            echo -e "FROM nginx:alpine\nCOPY . /usr/share/nginx/html\nEXPOSE 80" > ~/ecommerencefrontend/Dockerfile

            # Build and run container
            cd ~/ecommerencefrontend
            sudo docker build --no-cache -t ecommerencefrontend .
            sudo docker run -d -p 8081:80 --name ecommerencefrontend ecommerencefrontend

            echo "Deployed Angular App Successfully."
          EOF

